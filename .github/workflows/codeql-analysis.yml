name: "CodeQL"

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  schedule:
    - cron: '33 23 * * 2'

jobs:
  analyze:
    name: Analyze
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        language: [ 'java', 'javascript' ]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - uses: actions/cache@v1
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-m2
        restore-keys: |
          ${{ runner.os }}-m2
          
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v1
      with:
        languages: ${{ matrix.language }}

    - name: Configure Maven
      uses: whelk-io/maven-settings-xml-action@v4
      with:
        repositories: '[{ "id": "backbase", "url": "https://repo.backbase.com/repo" }]'
        plugin_repositories: '[{ "id": "backbase-plugins", "url": "https://repo.backbase.com/repo" }]'
        servers: '[{ "id": "backbase", "username": "${{ secrets.REPO_USERNAME }}", "password": "${{ secrets.REPO_PASSWORD }}" },{ "id": "backbase-plugins", "username": "${{ secrets.REPO_USERNAME }}", "password": "${{ secrets.REPO_PASSWORD }}" }]'

    - name: Prepare Build
      run: |
        VERSION_PARTS=($(mvn help:evaluate -Dexpression=project.version -q -DforceStdout | tr "." "\n"))
        echo "MAJOR=${VERSION_PARTS[0]}" >> $GITHUB_ENV
        echo "MINOR=${VERSION_PARTS[1]}" >> $GITHUB_ENV
        echo "PATCH=${VERSION_PARTS[2]}" >> $GITHUB_ENV
        NEW_VERSION="$((MAJOR)).$((MINOR+1)).0"
        echo "New version  is: $NEW_VERSION"
        mvn versions:set versions:update-child-modules -DnewVersion=${NEW_VERSION} -DprocessAllModules -DgenerateBackupPoms=false

    - name: Autobuild
      uses: github/codeql-action/autobuild@v1

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v1
